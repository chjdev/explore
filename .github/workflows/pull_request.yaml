name: Pull request
on:
  pull_request:
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_ARTIFACTS_PATH: ./rust-artifacts

jobs:
  rust-docker:
    name: Rust Dockerize
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        bin:
          - auth
    needs:
      - rust-lint
      - rust-test
      - rust-build
    steps:
      - uses: actions/checkout@v3
      - name: Restore Rust Artifacts Cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.RUST_ARTIFACTS_PATH }}
          key: rust-build-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get Artifact Tag
        id: artifact_tag
        run: echo tag=$(cargo pkgid --locked auth | xargs basename | sed s/#/-v/) >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:  ${{ secrets.DOCKERHUB_REPO }}
          flavor: |
            latest=false
          tags: |
            type=sha,format=long,prefix=${{ steps.artifact_tag.outputs.tag }}-
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            RUST_ARTIFACTS_PATH=${{ env.RUST_ARTIFACTS_PATH }}
            BIN=${{ matrix.bin }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  rust-lint:
    name: Rust Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Formatting
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace --tests --all-targets --all-features --locked -- -D warnings -D clippy::all -D clippy::print_stdout -D clippy::print_stderr

  rust-test:
    name: Rust Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo test --workspace --all-targets --all-features --locked

  rust-build:
    name: Rust Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Cargo Build
        run: cargo build --release --locked
      # replace with --out-dir once stable
      - name: Export Rust Artifacts
        run: |
          mkdir ${{ env.RUST_ARTIFACTS_PATH }}
          find ./target/release -maxdepth 1 -type f -perm /111 -exec cp "{}" ${{ env.RUST_ARTIFACTS_PATH }} \;
      - name: Save Rust Artifact Cache
        uses: actions/cache/save@v3
        with:
          path: ${{ env.RUST_ARTIFACTS_PATH }}
          key: rust-build-${{ github.run_id }}-${{ github.run_attempt }}
