name: Pull request
on:
  pull_request:
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  DOCKERHUB_REPO: chjdev/explore

jobs:
  rust-lint:
    name: Rust Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Formatting
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace --tests --all-targets --all-features --locked -- -D warnings -D clippy::all -D clippy::print_stdout -D clippy::print_stderr

  rust-test:
    name: Rust Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: cargo test --workspace --all-targets --all-features --locked

  rust-build:
    name: Rust Dockerize
    runs-on: ubuntu-latest
    environment: production
    needs:
      - rust-builder
    strategy:
      matrix:
        bin:
          - auth
    steps:
      - uses: actions/checkout@v3
      - name: Docker Build Cache
        uses: actions/cache/restore@v3
        with:
          path: buildcache
          key: buildcache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get Artifact Tag
        id: artifact_tag
        run: echo tag=$(cargo pkgid --locked auth | xargs basename | sed s/#/-v/) >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:  ${{ secrets.DOCKERHUB_REPO }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=pr,prefix=${{ steps.artifact_tag.outputs.tag }}-pr-
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            BASE_IMAGE=${{ secrets.DOCKERHUB_REPO }}:rust-builder-test
            BIN=${{ matrix.bin }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=buildcache


  rust-builder:
    name: Rust Builder
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Docker Build Cache
        uses: actions/cache@v3
        with:
          path: buildcache
          key: buildcache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:  ${{ secrets.DOCKERHUB_REPO }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=rust-builder-test
      - name: Build and Push Rust Builder
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ci/rust-builder/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=local,src=buildcache
            type=registry,ref=chjdev/explore:rust-builder-test-buildcache
          cache-to: |
            type=registry,ref=chjdev/explore:rust-builder-test-buildcache,mode=max
            type=local,dest=buildcache

